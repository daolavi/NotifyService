name: "SAM Build & Deploy"
description: "Build & Deploy SAM application"
inputs:
  aws-access-key:
    required: true
    description: "AWS Access Key"
  aws-secret-access-key:
    required: true
    description: "AWS Secret Key"
  aws-region:
    required: true
    description: "AWS Region"
  dotnet-version:
    required: true
    description: ".NET Version to configure"
  template-file-path:
    required: true
    description: "Path to the SAM template file"
  stack-name:
    required: true
    description: "The name of the CloudFormation stack to deploy"
  s3-bucket-name:
    required: true
    description: "The name of the S3 bucket to store SAM artefacts"

runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v2
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ inputs.dotnet-version }}
    - uses: aws-actions/setup-sam@v2
      with:
          use-installer: true
          
    - run: env | grep AWS
      shell: bash
      
    - uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - run: env | grep AWS
      shell: bash
      
    - run: sam build -t ${{ inputs.template-file-path }} --parameter-overrides LambdaArchitecture=x86_64
      shell: bash
      
    - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name ${{inputs.stack-name}} --s3-prefix ${{inputs.stack-name}} --s3-bucket ${{ inputs.s3-bucket-name }} --capabilities CAPABILITY_IAM --parameter-overrides LambdaArchitecture=x86_64
      shell: bash